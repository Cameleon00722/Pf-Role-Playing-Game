(* création personnage *) 

type sac = | Eponge | Cuisse_de_poulet | Piece;;
type classe = | Guerrier | Archer | Magicien;;
type genre = | Homme | Femme;;

type personnage = {nom : string ; classe : string ;  genre : string ; pv: int; exp : int; niveau : int; sac : sac list} ;;


(* création monstre *) 

type type_de_monstre = | Golem | Nuee_de_moustiques | Sanglier
type choix_butin = | Eponge | Poulet | Piece
                     
type monstre = {nom : type_de_monstre ; pv : int ; attaque : string ; loot : choix_butin}
  



  
  
type item = | Eponge | Piece | Cuisse_poulet ;; 
type quantite = int ;;
type items = { item: item; quantite: quantite} ;;
(* du coup le sac est une items list*)
let item_to_string = fun it->
  match it with 
  | Eponge -> "éponges"
  | Piece -> "pièces"
  | Cuisse_poulet -> "poulets" ;;
let rec afficher_contenu_sac = fun sac ->
  match sac with
  |[]-> print_string "\n"
  |{item=i; quantite= q}::tl when q>0-> 
      print_int q;
      print_string (" "^(item_to_string i));
      print_string "\n";
      afficher_contenu_sac tl
  |{item=i; quantite= q}::tl-> afficher_contenu_sac tl;;
exception No_food



let mon_monstre = {nom=Golem; pv = 10 ; attaque = 1 ; loot= Eponge}

let personnage = {nom = "Laurent" ; classe = "guerrier" ;  genre = "male"  ; pv = 10 ; exp = 0; niveau = 0; sac = [Eponge] } ;;
